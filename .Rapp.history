x <- 1:10
if (x > 5) { x<- 0}
x <- list (a=1:5, b=rnorm(10))
x
lapply(x, mean)
y <- lapply(x, mean)
y
x < 1:4
x <- 1:4
x
y <- lapply(x, mean)
y
x <- list (a=matrix(1:4,2,2), b=matrix(1:6,3,2))
x
lapply(x, function(y) y[,1])
lapply(x, function(y) y[,2])
lapply(x, function(y) y[1,2])
x <- 1:4
x
lapply(x, mean)
sapply(x, mean)
x <- matrix (rnorm(200), 20, 10)
x
x [,1]
mean (x [,1])
lapply(x, mean)
x
apply(x, 2, mean)
apply(x, 1, mean)
c (2,2,10)
rnorm(2*2*10)
array(rnorm(40),c(2,2,10))
array(rnorm(3),c(2,2,10))
array(1:10,c(3,3))
array(1:10,c(3,3,1))
array(1:20,c(3,3,2))
array(rnorm(3),c(2,2,10))
apply (a, c(1,2), mean)
a <- array(rnorm(3),c(2,2,10))
apply (a, c(1,2), mean)
?runif
runif(10)
?rnorm
x <- c(rnorm(10), runif(10), rnorm(10,1))
x
rnorm(10,1)
x <- c(rnorm(10), runif(10), rnorm(10,1))
x
gl(3,10)
?gl
f <- gl(3,10)
split(x, f)
gl(3,10, c('a','b','c'))
gl(3,10)
gl(3,10, labels=c(1,2,3))
l <- gl(3,10, labels=c(1,2,3))
l
split(x, f)
s <- split(x,f)
s
s$'1'
x <- rnorm(10)
x
f1 <- gl(2,5)
f1
f2 <- gl(5, 2)
f2
interaction(f1, f2)
x
list (f1, f2)
x
split(x, list(f1, f2))
split (x, f1)
f1
split(x, f2)
split(x, c(1,1))
split(x, c(1,2))
split(x, c(1,2,3))
split(x, c(1,2,3,4,5))
split(x, c(1,2,3,4,5,6,7,8,9,10))
interaction(f1,f2)
split(x, c(1.1 1.1 1.2 1.2 1.3 2.3 2.4 2.4,2.5,2.5))
split(x, c(1.1, 1.1, 1.2, 1.2, 1.3, 2.3, 2.4,2.4,2.5,2.5))
split(x, c(1,2))
split(x, c(1.1,2))
split(x, c(1.1,1.2))
split(x, c(1.1,1.2,1.3))
split(x, c(1.1,1.1))
split(x, c(1.1,1.1,1.2,1.2))
split(x, c(1.1,1.1,1.2,1.2,1.3))
split(x, c('a','b'))
split(x, c('a','b','c','d','e'))
split(x, c('a','a','c','d','e'))
split(x, c('a','a','c','d','e','f','g','h','i','j'))
split(x, c('a','a','b','b','e','f','g','h','i','j'))
split(x, c('a','a','b','b','c','d','e','e','f','f'))
split(x, list(f1, f2))
list(f1,f2)
interaction(f1,f2)
split(x, interaction(f1, f2))
x
invisible(x)
y <- print(x)
y
library(datasets)
data(iris)
iris
?iris
head(iris)
apply(iris, mean)
iris$Sepal.Length
lapply(iris$Sepal.length,mean)
apply(iris$Sepal.length,mean)
?apply
?lapply
lapply(iris,mean)
iris[,1:4]
head(iris[,1:4])
head(iris[,1:4],2)
apply(iris[,1:4],2,mean)
library(datasets)
data(mtcars)
head(mtcars)
?mtcars
head(mtcars)
split(mtcars,mtcars$cyl)
split(mtcars$mpg,mtcars$cyl)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
sapply(split(mtcars$hp,mtcars$cyl),mean)
ls
?ls
debug(ls)
ls
?ls
getwd()
setwd("/Users/Houman/Documents/ProgrammingR/")
getwd()
source("makeVector.R")
v <- makeVector (3)
source("makeVector.R")
v <- makeVector (3)
v
setwd('/Users/Houman/Documents/ProgrammingR/ProgrammingAssignment2')
getwd
getwd()
source (file='cachematrix.R')
makeCacheMatrix(matrix(1:4,2,2))
matrix(1:4, 2,2)
matrix(1:4, 2,2)
source (file='cachematrix.R')
om <- makeCacheMatrix(matrix(1:4,2,2))
om
om$get()
om$getReverse()
cacheReverse(om)
cacheSolve(om)
source (file='cachematrix.R')
om <- makeCacheMatrix(matrix(1:4,2,2))
cacheSolve(om)
source (file='cachematrix.R')
cacheSolve(om)
cacheSolve(om)
